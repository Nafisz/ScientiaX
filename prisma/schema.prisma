const axios = require('axios');
require('dotenv').config();

async function aiService(conversation) {
  const response = await axios.post(
    'https://api.openai.com/v1/chat/completions',
    {
      model: 'gpt-4o',
      messages: [
        { role: 'system', content: 'Konversi percakapan menjadi point berdasarkan element of thought. Format hasil dalam JSON array: [{ element: "reasoning", value: 3 }, ...]' },
        { role: 'user', content: conversation }
      ]
    },
    {
      headers: {
        Authorization: `Bearer ${process.env.OPENAI_API_KEY}`
      }
    }
  );
  return JSON.parse(response.data.choices[0].message.content);
}

module.exports = aiService;


// === File: prisma/schema.prisma ===
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  age       Int
  sessions  Session[]
}

model Session {
  id        Int      @id @default(autoincrement())
  topic     String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  expPoints ExpPoint[]
}

model ExpPoint {
  id        Int      @id @default(autoincrement())
  element   String
  value     Int
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId Int
}